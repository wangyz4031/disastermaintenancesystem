
package com.bjjw.dmsmaintenanceservice.webservice;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "AccessBusWCF", targetNamespace = "http://DST_V2/AccessBus", wsdlLocation = "http://127.0.0.1:10003/AccessBus/AccessBusWCF?wsdl")
public class AccessBusWCF
    extends Service
{
    private final static URL ACCESSBUSWCF_WSDL_LOCATION;
    private final static WebServiceException ACCESSBUSWCF_EXCEPTION;
    private final static QName ACCESSBUSWCF_QNAME = new QName("http://DST_V2/AccessBus", "AccessBusWCF");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://127.0.0.1:10003/AccessBus/AccessBusWCF?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ACCESSBUSWCF_WSDL_LOCATION = url;
        ACCESSBUSWCF_EXCEPTION = e;
    }

    public AccessBusWCF() {
        super(__getWsdlLocation(), ACCESSBUSWCF_QNAME);
    }

    public AccessBusWCF(WebServiceFeature... features) {
        super(__getWsdlLocation(), ACCESSBUSWCF_QNAME, features);
    }

    public AccessBusWCF(URL wsdlLocation) {
        super(wsdlLocation, ACCESSBUSWCF_QNAME);
    }

    public AccessBusWCF(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ACCESSBUSWCF_QNAME, features);
    }

    public AccessBusWCF(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AccessBusWCF(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IAccessBusWCF
     */
    @WebEndpoint(name = "BasicHttpBinding_IAccessBusWCF")
    public IAccessBusWCF getBasicHttpBindingIAccessBusWCF() {
        return super.getPort(new QName("http://DST_V2/AccessBus", "BasicHttpBinding_IAccessBusWCF"), IAccessBusWCF.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IAccessBusWCF
     */
    @WebEndpoint(name = "BasicHttpBinding_IAccessBusWCF")
    public IAccessBusWCF getBasicHttpBindingIAccessBusWCF(WebServiceFeature... features) {
        return super.getPort(new QName("http://DST_V2/AccessBus", "BasicHttpBinding_IAccessBusWCF"), IAccessBusWCF.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ACCESSBUSWCF_EXCEPTION!= null) {
            throw ACCESSBUSWCF_EXCEPTION;
        }
        return ACCESSBUSWCF_WSDL_LOCATION;
    }

}
